{"version":3,"sources":["components/AddCategory.js","services/loadGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA6BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAQP,GAAR,mBAAuBO,OACrCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,uBCNbG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,0DAC2CC,UAAUH,GADrD,sDAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAGtCa,QAAQC,IAAIR,GAXQ,kBAYbA,GAZa,4CAAH,sDCUNS,EATK,SAAC,GAAa,IAAXP,EAAU,EAAVA,IACrB,OACE,sBAAKQ,UAAU,yCAAf,UACE,qBAAKC,IAAKT,EAAIR,IAAKkB,IAAKV,EAAIE,QAC5B,4BAAIF,EAAIE,YCaCS,EAfC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAACrB,GACtBmB,EAAS,CACPjB,KAAMF,EACNiB,SAAS,SAGd,IAEIC,EDZ2BI,CAAa3B,GAAjCa,EADkB,EACxBN,KAAce,EADU,EACVA,QACtB,OACE,qCACE,6BAAKtB,IACJsB,GAAW,2CACZ,qBAAKJ,UAAU,OAAf,gBACGL,QADH,IACGA,OADH,EACGA,EAAQJ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAAaA,IAAKA,GAAUA,EAAIC,aES3BiB,EAjBM,WAAO,IAAD,EACW1C,mBAAS,CAAC,iBADrB,mBAClB2C,EADkB,KACN5C,EADM,KAGzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG4C,EAAWpB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCT5C8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f1153383.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((c) => [inputValue, ...c]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","\r\n export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=rf6JvLFZluAPqDf7nt5WfT8DihJMjtLl`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    console.log(gifs);\r\n    return gifs;\r\n  };","import React from \"react\";\r\n\r\nconst GifGridItem = ({ img }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={img.url} alt={img.title} />\r\n      <p>{img.title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Loading...</p>}\r\n      <div className=\"grid\">\r\n        {images?.map((img) => (\r\n          <GifGridItem img={img} key={img.id} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"./../services/loadGifs\";\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n      getGifs(category).then((resp) => {\r\n        setState({\r\n          data: resp,\r\n          loading: false,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Boku no hero\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid category={category} key={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}